/* eslint-disable @next/next/no-img-element */
import dynamic from 'next/dynamic';
import React, { useContext, useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import AppMenuitem from './AppMenuitem';
import { LayoutContext } from './context/layoutcontext';
import { MenuProvider } from './context/menucontext';
import Link from 'next/link';
import { AppMenuItem } from '../types/types';
import { Button } from 'primereact/button';
import { ConfirmPopup, confirmPopup, ConfirmPopupProps } from 'primereact/confirmpopup';
import { MouseEvent } from 'react';

// import { isLogin, setLogout } from '../app/api/ens';

const AppMenu = () => {
    const router = useRouter();
    const { layoutConfig } = useContext(LayoutContext);
    // const _userLogin = isLogin();
    // let _isLogin = true;
    // let _isLogout = true

    // if (_userLogin === '' || _userLogin === undefined || _userLogin === null) {
    //     _isLogin = false
    //     _isLogout = true
    // } else {
    //     _isLogin = true
    //     _isLogout = false
    // }

    // console.log('AppMenu', _userLogin);
    // console.log('AppMenu', _isLogin);

    // const accept = () => {
    //     setLogout();
    //     router.push('/ens/login');
    // };

    // const LogoutButton = () => {
    //     return (
    //         <React.Fragment>
    //             <Button id="logout" onClick={confirmLogout} label="Log Out" raised />
    //             <ConfirmPopup />
    //         </React.Fragment>
    //     );
    // };

    // const LoginButton = () => {
    //     return (
    //         <React.Fragment>
    //             <Link href="/ens/login">
    //                 <Button id="login" label="Login" severity="secondary" raised />
    //             </Link>
    //         </React.Fragment>
    //     );
    // };

    // const reject = () => {};

    // const confirmLogout = (event: MouseEvent<HTMLButtonElement>) => {
    //     const confirmPopupProps: ConfirmPopupProps = {
    //         target: event.currentTarget,
    //         message: 'Are you sure?',
    //         icon: 'pi pi-exclamation-triangle',
    //         accept,
    //         reject
    //     };

    //     confirmPopup(confirmPopupProps);
    // };

    // const confirmLogout = (event: MouseEvent<HTMLButtonElement>) => {
    //     confirmPopup({
    //         target: event.currentTarget,
    //         message: 'Are you sure ?',
    //         // icon: 'pi pi-exclamation-triangle',
    //         accept,
    //         reject
    //     });
    // };

    const model: AppMenuItem[] = [
        {
            label: 'Menu',
            items: [
                { label: 'Home', icon: 'pi pi-fw pi-home', to: '/' },  
                { label: 'Knowledge Centre', icon: 'pi pi-fw pi-globe', to: '/ens/knowledge' }
            ]
        },
        {
            label: 'Monitoring',
            items: [
                { label: 'Mini Lab', icon: 'pi pi-fw pi-bars', to: '/ens/minilabmonitor' },
                { label: 'WWT', icon: 'pi pi-fw pi-bars', to: '/ens/wwtmonitor' },
            ]
        },
        {
            label: 'Record',
            items: [
              
                { label: 'Mini Lab', icon: 'pi pi-fw pi-table', to: '/ens/minilab' },
                { label: 'WWT', icon: 'pi pi-fw pi-table', to: '/ens/wwt' },
                { label: 'Mini Lab Parameter', icon: 'pi pi-fw pi-check-square', to: '/ens/minilabparams' },
                { label: 'WWT Parameter', icon: 'pi pi-fw pi-check-square', to: '/ens/wwtparams' },
                { label: 'Knowledge Upload', icon: 'pi pi-fw pi-table', to: '/ens/upload' }
            ]
        }

        // {
        //     label: 'Test',
        //     items: [
        //         { label: 'Form Upload', icon: 'pi pi-fw pi-id-card', to: '/ens/minilab/up' }
        //     //     { label: 'Input', icon: 'pi pi-fw pi-check-square', to: '/uikit/input' },
        //     //     { label: 'Float Label', icon: 'pi pi-fw pi-bookmark', to: '/uikit/floatlabel' },
        //     //     { label: 'Invalid State', icon: 'pi pi-fw pi-exclamation-circle', to: '/uikit/invalidstate' },
        //     //     { label: 'Button', icon: 'pi pi-fw pi-mobile', to: '/uikit/button', class: 'rotated-icon' },
        //     //     { label: 'Table', icon: 'pi pi-fw pi-table', to: '/uikit/table' },
        //     //     { label: 'List', icon: 'pi pi-fw pi-list', to: '/uikit/list' },
        //     //     { label: 'Tree', icon: 'pi pi-fw pi-share-alt', to: '/uikit/tree' },
        //     //     { label: 'Panel', icon: 'pi pi-fw pi-tablet', to: '/uikit/panel' },
        //     //     { label: 'Overlay', icon: 'pi pi-fw pi-clone', to: '/uikit/overlay' },
        //     //     { label: 'Media', icon: 'pi pi-fw pi-image', to: '/uikit/media' },
        //     //     { label: 'Menu', icon: 'pi pi-fw pi-bars', to: '/uikit/menu', preventExact: true },
        //     //     { label: 'Message', icon: 'pi pi-fw pi-comment', to: '/uikit/message' },
        //     //     { label: 'File', icon: 'pi pi-fw pi-file', to: '/uikit/file' },
        //     //     { label: 'Chart', icon: 'pi pi-fw pi-chart-bar', to: '/uikit/charts' },
        //     //     { label: 'Misc', icon: 'pi pi-fw pi-circle', to: '/uikit/misc' }
        //     ]
        // }
        // {
        //     label: 'Prime Blocks',
        //     items: [
        //         { label: 'Free Blocks', icon: 'pi pi-fw pi-eye', to: '/blocks', badge: 'NEW' },
        //         // { label: 'All Blocks', icon: 'pi pi-fw pi-globe', url: 'https://blocks.primereact.org', target: '_blank' }
        //     ]
        // },
        // {
        //     label: 'Utilities',
        //     items: [
        //         { label: 'PrimeIcons', icon: 'pi pi-fw pi-prime', to: '/utilities/icons' },
        //         // { label: 'PrimeFlex', icon: 'pi pi-fw pi-desktop', url: 'https://primeflex.org/', target: '_blank' }
        //     ]
        // },
        // {
        //     label: 'Pages',
        //     icon: 'pi pi-fw pi-briefcase',
        //     to: '/pages',
        //     items: [
        //         {
        //             label: 'Landing',
        //             icon: 'pi pi-fw pi-globe',
        //             to: '/landing'
        //         },
        //         {
        //             label: 'Auth',
        //             icon: 'pi pi-fw pi-user',
        //             items: [
        //                 {
        //                     label: 'Login',
        //                     icon: 'pi pi-fw pi-sign-in',
        //                     to: '/auth/login'
        //                 },
        //                 {
        //                     label: 'Error',
        //                     icon: 'pi pi-fw pi-times-circle',
        //                     to: '/auth/error'
        //                 },
        //                 {
        //                     label: 'Access Denied',
        //                     icon: 'pi pi-fw pi-lock',
        //                     to: '/auth/access'
        //                 }
        //             ]
        //         },
        //         {
        //             label: 'Crud',
        //             icon: 'pi pi-fw pi-pencil',
        //             to: '/pages/crud'
        //         },
        //         {
        //             label: 'Timeline',
        //             icon: 'pi pi-fw pi-calendar',
        //             to: '/pages/timeline'
        //         },
        //         {
        //             label: 'Not Found',
        //             icon: 'pi pi-fw pi-exclamation-circle',
        //             to: '/pages/notfound'
        //         },
        //         {
        //             label: 'Empty',
        //             icon: 'pi pi-fw pi-circle-off',
        //             to: '/pages/empty'
        //         }
        //     ]
        // },
        // {
        //     label: 'Hierarchy',
        //     items: [
        //         {
        //             label: 'Submenu 1',
        //             icon: 'pi pi-fw pi-bookmark',
        //             items: [
        //                 {
        //                     label: 'Submenu 1.1',
        //                     icon: 'pi pi-fw pi-bookmark',
        //                     items: [
        //                         { label: 'Submenu 1.1.1', icon: 'pi pi-fw pi-bookmark' },
        //                         { label: 'Submenu 1.1.2', icon: 'pi pi-fw pi-bookmark' },
        //                         { label: 'Submenu 1.1.3', icon: 'pi pi-fw pi-bookmark' }
        //                     ]
        //                 },
        //                 {
        //                     label: 'Submenu 1.2',
        //                     icon: 'pi pi-fw pi-bookmark',
        //                     items: [{ label: 'Submenu 1.2.1', icon: 'pi pi-fw pi-bookmark' }]
        //                 }
        //             ]
        //         },
        //         {
        //             label: 'Submenu 2',
        //             icon: 'pi pi-fw pi-bookmark',
        //             items: [
        //                 {
        //                     label: 'Submenu 2.1',
        //                     icon: 'pi pi-fw pi-bookmark',
        //                     items: [
        //                         { label: 'Submenu 2.1.1', icon: 'pi pi-fw pi-bookmark' },
        //                         { label: 'Submenu 2.1.2', icon: 'pi pi-fw pi-bookmark' }
        //                     ]
        //                 },
        //                 {
        //                     label: 'Submenu 2.2',
        //                     icon: 'pi pi-fw pi-bookmark',
        //                     items: [{ label: 'Submenu 2.2.1', icon: 'pi pi-fw pi-bookmark' }]
        //                 }
        //             ]
        //         }
        //     ]
        // },
        // {
        //     label: 'Get Started',
        //     items: [
        //         {
        //             label: 'Documentation',
        //             icon: 'pi pi-fw pi-question',
        //             to: '/documentation'
        //         },
        //         // {
        //         //     label: 'View Source',
        //         //     icon: 'pi pi-fw pi-search',
        //         //     url: 'https://github.com/primefaces/sakai-react',
        //         //     target: '_blank'
        //         // }
        //     ]
        // }
    ];

    return (
        <MenuProvider>
            <ul className="layout-menu">
                {model.map((item, i) => {
                    return !item?.seperator ? <AppMenuitem item={item} root={true} index={i} key={item.label} /> : <li className="menu-separator"></li>;
                })}
            </ul>
            {/* <ul className="layout-menu mt-5">
                <li className="" hidden={_isLogout}>
                    <ConfirmPopup />
                    <Button onClick={confirmLogout} label="Log Out" raised />
                </li>

                <li className="" hidden={_isLogin}>
                    <Link href="/ens/login">
                        <Button label="Login" severity="secondary" raised />
                    </Link>
                </li>
            </ul> */}
        </MenuProvider>
    );
};

export default AppMenu;
